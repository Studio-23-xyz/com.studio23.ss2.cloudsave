{
  "api/Studio23.SS2.CloudSave.Core.CloudSaveManager.html": {
    "href": "api/Studio23.SS2.CloudSave.Core.CloudSaveManager.html",
    "title": "Class CloudSaveManager | |",
    "keywords": "Class CloudSaveManager Namespace Studio23.SS2.CloudSave.Core public class CloudSaveManager : MonoBehaviour Inheritance System.Object CloudSaveManager Fields Instance public static CloudSaveManager Instance Field Value CloudSaveManager OnDownloadFail public UnityEvent OnDownloadFail Field Value UnityEvent OnDownloadSuccess public UnityEvent OnDownloadSuccess Field Value UnityEvent OnInitializationFail public UnityEvent OnInitializationFail Field Value UnityEvent OnInitializationSucess public UnityEvent OnInitializationSucess Field Value UnityEvent OnUploadFail public UnityEvent OnUploadFail Field Value UnityEvent OnUploadSuccess public UnityEvent OnUploadSuccess Field Value UnityEvent Methods DeleteContainerFromCloud(string) public UniTask DeleteContainerFromCloud(string slotName) Parameters slotName string Returns UniTask DownloadFromCloud(string, string, string) You should fire OnDownloadSuccess in the implementation public UniTask DownloadFromCloud(string slotName, string key, string downloadLocation) Parameters slotName string key string downloadLocation string Returns UniTask Initialize() This is responsible for initialization of platform cloud save feature if needed public UniTask Initialize() Returns UniTask UploadToCloud(string, string, string) You should fire OnUploadSuccess in the implementation. public UniTask UploadToCloud(string slotName, string key, string filepath) Parameters slotName string key string filepath string Returns UniTask"
  },
  "api/Studio23.SS2.CloudSave.Core.CloudSaveProviderFactory.html": {
    "href": "api/Studio23.SS2.CloudSave.Core.CloudSaveProviderFactory.html",
    "title": "Class CloudSaveProviderFactory | |",
    "keywords": "Class CloudSaveProviderFactory Namespace Studio23.SS2.CloudSave.Core public class CloudSaveProviderFactory : MonoBehaviour Inheritance System.Object CloudSaveProviderFactory"
  },
  "api/Studio23.SS2.CloudSave.Core.html": {
    "href": "api/Studio23.SS2.CloudSave.Core.html",
    "title": "Namespace Studio23.SS2.CloudSave.Core | |",
    "keywords": "Namespace Studio23.SS2.CloudSave.Core Classes CloudSaveManager CloudSaveProviderFactory"
  },
  "api/Studio23.SS2.CloudSave.Data.AbstractCloudSaveProvider.html": {
    "href": "api/Studio23.SS2.CloudSave.Data.AbstractCloudSaveProvider.html",
    "title": "Class AbstractCloudSaveProvider | |",
    "keywords": "Class AbstractCloudSaveProvider Namespace Studio23.SS2.CloudSave.Data public abstract class AbstractCloudSaveProvider : ScriptableObject Inheritance System.Object AbstractCloudSaveProvider Derived DummyCloudSaveProvider Fields _platformProvider protected PlatformProvider _platformProvider Field Value PlatformProvider Properties PlatformProvider public PlatformProvider PlatformProvider { get; set; } Property Value PlatformProvider Methods DeleteSlotFromCloud(string) Delete slot data from cloud. Mostly used for debug purposes protected abstract UniTask<int> DeleteSlotFromCloud(string slotName) Parameters slotName string Name of the slot Returns UniTask<int> Status code as int DownloadFromCloud(string, string) Download one file from the cloud from the selected slot with a key. Get byte[] as the file data. protected abstract UniTask<byte[]> DownloadFromCloud(string slotName, string key) Parameters slotName string Name of the slot key string Unique ID for the file Returns UniTask<byte[]> Raw Byte[] as the data DownloadFromCloud(string, string[]) Download multiple files from the cloud protected abstract UniTask<Dictionary<string, byte[]>> DownloadFromCloud(string slotName, string[] keys) Parameters slotName string Name of the slot keys string[] List of uniqueIDs for each file Returns UniTask<Dictionary<string, byte[]>> A Dictionary of KeyValue pair of file name key and it's respective data byte[] Initialize() This is responsible for initialization of platform cloud save feature if needed protected abstract UniTask<int> Initialize() Returns UniTask<int> UploadToCloud(string, string, byte[]) Uploads a save file to the cloud to a slot with the key name as byte[]. protected abstract UniTask<int> UploadToCloud(string slotName, string key, byte[] data) Parameters slotName string Name of the slot key string Unique ID for the file data byte[] Raw Byte data Returns UniTask<int> Status code as int"
  },
  "api/Studio23.SS2.CloudSave.Data.DummyCloudSaveProvider.html": {
    "href": "api/Studio23.SS2.CloudSave.Data.DummyCloudSaveProvider.html",
    "title": "Class DummyCloudSaveProvider | |",
    "keywords": "Class DummyCloudSaveProvider Namespace Studio23.SS2.CloudSave.Data public class DummyCloudSaveProvider : AbstractCloudSaveProvider Inheritance System.Object AbstractCloudSaveProvider DummyCloudSaveProvider Inherited Members AbstractCloudSaveProvider._platformProvider AbstractCloudSaveProvider.PlatformProvider Methods DeleteSlotFromCloud(string) Delete slot data from cloud. Mostly used for debug purposes protected override UniTask<int> DeleteSlotFromCloud(string slotName) Parameters slotName string Name of the slot Returns UniTask<int> Status code as int DownloadFromCloud(string, string) Download one file from the cloud from the selected slot with a key. Get byte[] as the file data. protected override UniTask<byte[]> DownloadFromCloud(string slotName, string key) Parameters slotName string Name of the slot key string Unique ID for the file Returns UniTask<byte[]> Raw Byte[] as the data DownloadFromCloud(string, string[]) Download multiple files from the cloud protected override UniTask<Dictionary<string, byte[]>> DownloadFromCloud(string slotName, string[] keys) Parameters slotName string Name of the slot keys string[] List of uniqueIDs for each file Returns UniTask<Dictionary<string, byte[]>> A Dictionary of KeyValue pair of file name key and it's respective data byte[] Initialize() This is responsible for initialization of platform cloud save feature if needed protected override UniTask<int> Initialize() Returns UniTask<int> UploadToCloud(string, string, byte[]) Uploads a save file to the cloud to a slot with the key name as byte[]. protected override UniTask<int> UploadToCloud(string slotName, string key, byte[] data) Parameters slotName string Name of the slot key string Unique ID for the file data byte[] Raw Byte data Returns UniTask<int> Status code as int"
  },
  "api/Studio23.SS2.CloudSave.Data.PlatformProvider.html": {
    "href": "api/Studio23.SS2.CloudSave.Data.PlatformProvider.html",
    "title": "Enum PlatformProvider | |",
    "keywords": "Enum PlatformProvider Namespace Studio23.SS2.CloudSave.Data public enum PlatformProvider Fields Default = 0 Nintendo = 5 PlayStation = 4 Steam = 1 XBoxCore = 2 XBoxPC = 3"
  },
  "api/Studio23.SS2.CloudSave.Data.html": {
    "href": "api/Studio23.SS2.CloudSave.Data.html",
    "title": "Namespace Studio23.SS2.CloudSave.Data | |",
    "keywords": "Namespace Studio23.SS2.CloudSave.Data Classes AbstractCloudSaveProvider DummyCloudSaveProvider Enums PlatformProvider"
  },
  "api/Studio23.SS2.CloudSave.Editor.DefaultCloudProviderEditor.html": {
    "href": "api/Studio23.SS2.CloudSave.Editor.DefaultCloudProviderEditor.html",
    "title": "Class DefaultCloudProviderEditor | |",
    "keywords": "Class DefaultCloudProviderEditor Namespace Studio23.SS2.CloudSave.Editor public class DefaultCloudProviderEditor : EditorWindow Inheritance System.Object DefaultCloudProviderEditor"
  },
  "api/Studio23.SS2.CloudSave.Editor.html": {
    "href": "api/Studio23.SS2.CloudSave.Editor.html",
    "title": "Namespace Studio23.SS2.CloudSave.Editor | |",
    "keywords": "Namespace Studio23.SS2.CloudSave.Editor Classes DefaultCloudProviderEditor"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| |",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | |",
    "keywords": "Changelog [v2.0.1] - 2024-1-31 Documentation Update Added a delete from cloud method [v2.0.0] - 2024-1-22 Cloud Save provider is now based on Factory Pattern Editor Script added to make developers life easy Platform Selection happen automatically based on Popular Scripting Symboles Added a dummyProvider for Debug Purposes [v1.0.0] - 2024-1-9 Cloud Save Calls are now based on Async methods [v0.0.6] - 2024-1-8 Removed Dependency from AuthSystem Code Refactored Dummy Authprovider Added [v0.0.4] - 2024-1-3 Added a cloud Save Manager Now provider calls are wrapped behind the manager class another level of abstraction [v0.0.1] - 2023-12-22 Initial Release"
  },
  "index.html": {
    "href": "index.html",
    "title": "| |",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| |",
    "keywords": "MIT License Copyright (c) 2023 Studio-23 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Cloud Save System | |",
    "keywords": "Cloud Save System This is the core of the Cloud save for various platforms Table of Contents Installation Usage Installation Install via Git URL You can also use the \"Install from Git URL\" option from Unity Package Manager to install the package. https://github.com/Studio-23-xyz/com.studio23.ss2.cloudsave.git#upm Usage This is a base package where it shares dependency to the other authentication packages. Download the required package you need for the publishing such as steam or xbox."
  }
}