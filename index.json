{
  "api/Global.CloudSaveManager.html": {
    "href": "api/Global.CloudSaveManager.html",
    "title": "Class CloudSaveManager | |",
    "keywords": "Class CloudSaveManager Namespace Global public class CloudSaveManager : MonoBehaviour Inheritance System.Object CloudSaveManager Fields OnDownloadFail public UnityEvent OnDownloadFail Field Value UnityEvent OnDownloadSuccess public UnityEvent OnDownloadSuccess Field Value UnityEvent OnInitializationFail public UnityEvent OnInitializationFail Field Value UnityEvent OnInitializationSucess public UnityEvent OnInitializationSucess Field Value UnityEvent OnUploadFail public UnityEvent OnUploadFail Field Value UnityEvent OnUploadSuccess public UnityEvent OnUploadSuccess Field Value UnityEvent Methods DownloadFromCloud(string, string) You should fire OnDownloadSuccess in the implementation public void DownloadFromCloud(string key, string downloadLocation) Parameters key string downloadLocation string Initialize() This is responsible for initialization of platform cloud save feature if needed public void Initialize() RegisterWithAuthSystem() Registers to auth system however it can be overriden public virtual void RegisterWithAuthSystem() Start() Calls Registration on start if it's true public virtual void Start() UploadToCloud(string, string) You should fire OnUploadSuccess in the implementation. public void UploadToCloud(string key, string filepath) Parameters key string filepath string"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | |",
    "keywords": "Namespace Classes CloudSaveManager"
  },
  "api/Studio23.SS2.CloudSave.Core.AbstractCloudSaveProvider.html": {
    "href": "api/Studio23.SS2.CloudSave.Core.AbstractCloudSaveProvider.html",
    "title": "Class AbstractCloudSaveProvider | |",
    "keywords": "Class AbstractCloudSaveProvider Namespace Studio23.SS2.CloudSave.Core public abstract class AbstractCloudSaveProvider : MonoBehaviour Inheritance System.Object AbstractCloudSaveProvider Fields OnDownloadFail protected UnityEvent OnDownloadFail Field Value UnityEvent OnDownloadSuccess protected UnityEvent OnDownloadSuccess Field Value UnityEvent OnInitializationFail protected UnityEvent OnInitializationFail Field Value UnityEvent OnInitializationSucess protected UnityEvent OnInitializationSucess Field Value UnityEvent OnUploadFail protected UnityEvent OnUploadFail Field Value UnityEvent OnUploadSuccess protected UnityEvent OnUploadSuccess Field Value UnityEvent Methods DownloadFromCloud(string, string) You should fire OnDownloadSuccess in the implementation protected abstract void DownloadFromCloud(string key, string downloadLocation) Parameters key string downloadLocation string Initialize() This is responsible for initialization of platform cloud save feature if needed protected abstract void Initialize() UploadToCloud(string, string) You should fire OnUploadSuccess in the implementation. protected abstract void UploadToCloud(string key, string filepath) Parameters key string filepath string"
  },
  "api/Studio23.SS2.CloudSave.Core.html": {
    "href": "api/Studio23.SS2.CloudSave.Core.html",
    "title": "Namespace Studio23.SS2.CloudSave.Core | |",
    "keywords": "Namespace Studio23.SS2.CloudSave.Core Classes AbstractCloudSaveProvider"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| |",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | |",
    "keywords": "Changelog [v0.0.4] - 2024-1-3 Added a cloud Save Manager Now provider calls are wrapped behind the manager class another level of abstraction [v0.0.1] - 2023-12-22 Initial Release"
  },
  "index.html": {
    "href": "index.html",
    "title": "| |",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| |",
    "keywords": "MIT License Copyright (c) 2023 Studio-23 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Cloud Save System | |",
    "keywords": "Cloud Save System This is the core of the Cloud save for various platforms Table of Contents Installation Usage Installation Install via Git URL You can also use the \"Install from Git URL\" option from Unity Package Manager to install the package. https://github.com/Studio-23-xyz/com.studio23.ss2.cloudsave.git#upm Usage This is a base package where it shares dependency to the other authentication packages. Download the required package you need for the publishing such as steam or xbox."
  }
}